<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[api.controller=function() {
  /* widget controller */
  var c = this;
	
  /* Step 3. Accept user input */
	c.selectAg = function(record) {

		//Set a property on the data object to identify the selected object
		c.data.selectedAg = record.agValue;

		//Send the data object to the server script
		c.server.update();
	}	

};	]]></client_script>
        <controller_as>c</controller_as>
        <css>.badge{background:red;}</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>true</has_preview>
        <id>table_summary</id>
        <internal>false</internal>
        <link><![CDATA[function link(scope, element, attrs, controller) {  }]]></link>
        <name>Table Summary</name>
        <option_schema/>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function() {

	/* Step 1. Load initial data from the server */
			/* populate the 'data' object */
			/* e.g., data.table = $sp.getValue('table'); */

	if(!input) {
		data.summary = [];
		data.table = 'x_snc_cloudevents_registrations';
		data.groupBy = 'event';
		data.fields = 'last_name,first_name,company,email,event,state';	

		var ga = new GlideAggregate(data.table);
		ga.setGroup(true);
		ga.groupBy(data.groupBy);
		ga.addAggregate('COUNT');
		ga.query();

		while(ga.next()) {
			data.summary.push({
				agName:ga[data.groupBy].getDisplayValue() || 'None',
				agValue:ga[data.groupBy].toString(),
				agCount:ga.getAggregate('COUNT')
			});
		}	
	}



	/* Step 4. Process user input */
	
	if(input) {
		//console.log("Selected ag (from server): " + input.selectedAg);
		data.records=[];

		var gr = new GlideRecordSecure(input.table);
		gr.addQuery(input.groupBy, input.selectedAg);
		gr.query();

		//use an array to order columns
		data.labels = [];
		var labels = $sp.getFieldsObject(gr, input.fields);

		for (var label in labels) {
			data.labels.push({"key":label,
												"type": labels[label].type,
												"value":labels[label].label});
		}

		while(gr.next()){
			var o = {};

			//use $sp utility methods rather than manually creating record objects
			$sp.getRecordDisplayValues(o,gr,input.fields);
			$sp.getRecordValues(o,gr,'sys_id');
			data.records.push(o);
		}	
	}

})();	]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-09-09 18:15:26</sys_created_on>
        <sys_id>0dc528da2f7191102ed0802df699b666</sys_id>
        <sys_mod_count>37</sys_mod_count>
        <sys_name>Table Summary</sys_name>
        <sys_package display_value="Cloud Dimensions Events" source="x_snc_cloudevents">77108b70610813007f44e59882b97a67</sys_package>
        <sys_policy/>
        <sys_scope display_value="Cloud Dimensions Events">77108b70610813007f44e59882b97a67</sys_scope>
        <sys_update_name>sp_widget_0dc528da2f7191102ed0802df699b666</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2022-09-09 20:38:15</sys_updated_on>
        <template><![CDATA[<form>
  
  <!-- Step 2. Display initial data from the server -->
  
  <div class="panel panel-default">
  <!-- Default panel contents -->
    <div class="panel-heading">Table Summary: Registrations</div>

  <!-- List group -->
  <ul class="list-group">
    <li class="list-group-item"
        ng-repeat="s in c.data.summary"
        ng-click="c.selectAg(s)">{{s.agName}}
      <span class="badge">{{s.agCount}}</span>
    </li>
  </ul>
</div>
  
  <!-- Step 5. Display customized content based on user input -->
  
 <!-- <pre>{{c.data.records | json}}</pre>-->
  <table class="table cloud-widgets"
         ng-if="c.data.records">
    <thead>
      <tr>
        <th ng-repeat="label in c.data.labels">{{label.value}}</th>
      </tr>
    </thead>

    <tbody>
      <tr ng-repeat="record in c.data.records">
        <td ng-repeat="label in c.data.labels"></td>
      </tr>
    </tbody>
  </table>	
</form>
	]]></template>
    </sp_widget>
</record_update>
